import java.util.ArrayList;
import java.util.List;

class Problem50 {
    public List<Integer> generatePrimes() {
        int n = 1000000;
        boolean[] isPrime = new boolean[n];
        List<Integer> primes = new ArrayList<>();
        for (int i = 2; i < n; i++) {
            isPrime[i] = true;
        }
        for (int p = 2; p * p < n; p++) {
            if (isPrime[p]) {
                for (int i = p * p; i < n; i += p) {
                    isPrime[i] = false;
                }
            }
        }
        for (int i = 2; i < n; i++) {
            if (isPrime[i]) {
                primes.add(i);
            }
        }
        return primes;
    }

    public int solution() {
        List<Integer> primes = generatePrimes();
        int longestSum = 0;
        int longestRun = 0;

        for (int i = 0; i < primes.size(); i++) {
            int sum = 0;
            for (int j = i; j < primes.size(); j++) {
                sum += primes.get(j);
                if (sum > 1000000) break;
                if (j - i > longestRun && primes.contains(sum)) {
                    longestSum = sum;
                    longestRun = j - i;
                }
            }
        }
        return longestSum;
    }
}

public class Main {
    public static void main(String[] args) {
        Problem50 exercise = new Problem50();
        System.out.println(exercise.solution());
    }
}
