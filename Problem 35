import java.util.ArrayList;
import java.util.List;

class Problem35 {
    public boolean isPrime(int x) {
        if (x <= 1) return false;
        for (int i = 2; i * i <= x; i++) {
            if (x % i == 0) return false;
        }
        return true;
    }

    public List<Integer> generateRotations(int x) {
        List<Integer> rotations = new ArrayList<>();
        String numberStr = String.valueOf(x);
        for (int i = 0; i < numberStr.length(); i++) {
            String rotated = numberStr.substring(i) + numberStr.substring(0, i);
            rotations.add(Integer.parseInt(rotated));
        }
        return rotations;
    }

    public boolean isCircularPrime(int x) {
        List<Integer> rotations = generateRotations(x);
        for (int rotation : rotations) {
            if (!isPrime(rotation)) {
                return false;
            }
        }
        return true;
    }

    public int counter() {
        int count = 0;
        for (int i = 2; i < 1000000; i++) {
            if (isPrime(i) && isCircularPrime(i)) {
                count++;
            }
        }
        return count;
    }
}

public class Main {
    public static void main(String[] args) {
        Problem35 exercise = new Problem35();
        System.out.println(exercise.counter());
    }
}
